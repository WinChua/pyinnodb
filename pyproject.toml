[project]
name = "pyinnodb"
version = "0.0.25"
description = "A parser for InnoDB file formats, in Python"
authors = [
    { name = "WinChua", email = "winchua@foxmail.com" }
]
dependencies = [
    "crcmod>=1.7",
    "construct==2.10.68",
    "construct-typing>=0.6.2",
    "click>=8.1.7",
]
readme = "README.md"
requires-python = ">= 3.9"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
managed = true

[dependency-groups]
dev = [
    "pytest>=8.1.1",
    "testcontainers>=4.1.1",
    "docker>=7.0.0",
    "sqlalchemy>=2.0.40",
    "requests==2.31.0",
    "cryptography>=43.0.0",
    "python-lsp-server>=1.12.0",
    "pymysql>=1.1.1",
    "mysqlclient>=2.2.7",
    "poethepoet>=0.37.0",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/pyinnodb"]

[tool.hatch.build]
exclude = [".venv", "data", "datadir"]

[tool.poe.tasks]
gencols = ["gencols:cols", "gencols:fmt"]
"gencols:cols" = "python devtools/gen-collations.py"
"gencols:fmt" = "uv fmt src/pyinnodb/const/collations.py"
cli.script = "pyinnodb.cli"
of = ["of:init", "of:req", "of:cp", "of:clean",  "of:zip", "of:patch", "of:ex"]
"of:init" = "mkdir -p target"
"of:req" = "uv pip install -r requirements.lock --target target"
"of:cp" = "cp -r src/pyinnodb target"
"of:clean" = "find target  -type d -name '__pycache__' -exec rm -rf {} +"
"of:zip" = "python -m zipapp target/ -m pyinnodb.cli:main -o pyinnodb.sh"
"of:patch" = 'sed -i "1i\#!/usr/bin/env python3" pyinnodb.sh'
"of:ex" = 'chmod a+x pyinnodb.sh'
"dp" = "python devtools/deploy_mysqld.py"
"td" = "tar cvzf tests/test_data.tgz tests/mysql5/ tests/mysql8"
bp.shell = "uv version --bump patch && git add -u . && git commit -m \"version release: `uv version --short`\" && git push"
